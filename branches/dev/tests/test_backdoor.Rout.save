
R version 3.0.2 Patched (2013-11-20 r64277) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pcalg)
> 
> ## NB: add tests in addition to the simple onesfrom Maathuis and Colombo (2013)
> ## in ../man/backdoor.Rd
> 
> `%w/o%` <- function(x, y) x[!x %in% y] #--  x without y
> ## slightly faster:
> `%w/o%` <- function(x, y) x[!match(x, y, nomatch = 0L)]
> 
> set.seed(47)
> p <- 17
> myDAG <- randomDAG(p, prob = 1/4) ## true DAG
> 
> ## Extract the adjacency matrix of the true DAG
> true.amat <- (amat <- as(myDAG, "matrix")) != 0 # TRUE/FALSE <==> 1/0
> print.table(1*true.amat, zero.=".") # "visualization"
   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
1  . . . . . 1 1 . 1  1  1  1  1  .  .  1  .
2  . . . 1 . . . . .  .  .  .  .  .  .  .  .
3  . . . . . . . . .  1  1  .  .  .  .  .  .
4  . . . . 1 . . . .  1  .  .  .  .  .  .  1
5  . . . . . . . 1 .  1  .  .  .  .  1  .  .
6  . . . . . . 1 . .  1  .  1  .  .  .  .  .
7  . . . . . . . . .  .  1  .  .  1  .  .  1
8  . . . . . . . . .  .  .  .  .  .  .  .  .
9  . . . . . . . . .  .  .  .  .  .  .  .  .
10 . . . . . . . . .  .  1  .  .  .  .  .  1
11 . . . . . . . . .  .  .  .  .  1  .  .  1
12 . . . . . . . . .  .  .  .  .  .  .  .  1
13 . . . . . . . . .  .  .  .  .  1  1  .  .
14 . . . . . . . . .  .  .  .  .  .  .  1  .
15 . . . . . . . . .  .  .  .  .  .  .  1  .
16 . . . . . . . . .  .  .  .  .  .  .  .  .
17 . . . . . . . . .  .  .  .  .  .  .  .  .
> 
> nodes <- 1:p; names(nodes) <- nodes
> cat("Time for many backdoor() s : ", system.time(
+ LL <- lapply(nodes, function(i)
+ 	     lapply(nodes %w/o% i,
+ 		    backdoor,
+ 		    amat = true.amat, x = i, type="dag"))
+ ), "\n")
Time for many backdoor() s :  3.589 0.007 3.624 0 0 
> 
> for(i in nodes[1:3]) ## Nodes 1,2,3 are all "root" nodes:
+     stopifnot(vapply(LL[[i]], identical, NA, y=integer(0)))
> 
> str(LL[-(1:3)]) ## Martin: interesting.. is "this" known?
List of 14
 $ 4 :List of 16
  ..$ 1 : int 2
  ..$ 2 : logi NA
  ..$ 3 : int 2
  ..$ 5 : int 2
  ..$ 6 : int 2
  ..$ 7 : int 2
  ..$ 8 : int 2
  ..$ 9 : int 2
  ..$ 10: int 2
  ..$ 11: int 2
  ..$ 12: int 2
  ..$ 13: int 2
  ..$ 14: int 2
  ..$ 15: int 2
  ..$ 16: int 2
  ..$ 17: int 2
 $ 5 :List of 16
  ..$ 1 : int 4
  ..$ 2 : int 4
  ..$ 3 : int 4
  ..$ 4 : logi NA
  ..$ 6 : int 4
  ..$ 7 : int 4
  ..$ 8 : int 4
  ..$ 9 : int 4
  ..$ 10: int 4
  ..$ 11: int 4
  ..$ 12: int 4
  ..$ 13: int 4
  ..$ 14: int 4
  ..$ 15: int 4
  ..$ 16: int 4
  ..$ 17: int 4
 $ 6 :List of 16
  ..$ 1 : logi NA
  ..$ 2 : int 1
  ..$ 3 : int 1
  ..$ 4 : int 1
  ..$ 5 : int 1
  ..$ 7 : int 1
  ..$ 8 : int 1
  ..$ 9 : int 1
  ..$ 10: int 1
  ..$ 11: int 1
  ..$ 12: int 1
  ..$ 13: int 1
  ..$ 14: int 1
  ..$ 15: int 1
  ..$ 16: int 1
  ..$ 17: int 1
 $ 7 :List of 16
  ..$ 1 : logi NA
  ..$ 2 : int [1:2] 1 6
  ..$ 3 : int [1:2] 1 6
  ..$ 4 : int [1:2] 1 6
  ..$ 5 : int [1:2] 1 6
  ..$ 6 : logi NA
  ..$ 8 : int [1:2] 1 6
  ..$ 9 : int [1:2] 1 6
  ..$ 10: int [1:2] 1 6
  ..$ 11: int [1:2] 1 6
  ..$ 12: int [1:2] 1 6
  ..$ 13: int [1:2] 1 6
  ..$ 14: int [1:2] 1 6
  ..$ 15: int [1:2] 1 6
  ..$ 16: int [1:2] 1 6
  ..$ 17: int [1:2] 1 6
 $ 8 :List of 16
  ..$ 1 : int 5
  ..$ 2 : int 5
  ..$ 3 : int 5
  ..$ 4 : int 5
  ..$ 5 : logi NA
  ..$ 6 : int 5
  ..$ 7 : int 5
  ..$ 9 : int 5
  ..$ 10: int 5
  ..$ 11: int 5
  ..$ 12: int 5
  ..$ 13: int 5
  ..$ 14: int 5
  ..$ 15: int 5
  ..$ 16: int 5
  ..$ 17: int 5
 $ 9 :List of 16
  ..$ 1 : logi NA
  ..$ 2 : int 1
  ..$ 3 : int 1
  ..$ 4 : int 1
  ..$ 5 : int 1
  ..$ 6 : int 1
  ..$ 7 : int 1
  ..$ 8 : int 1
  ..$ 10: int 1
  ..$ 11: int 1
  ..$ 12: int 1
  ..$ 13: int 1
  ..$ 14: int 1
  ..$ 15: int 1
  ..$ 16: int 1
  ..$ 17: int 1
 $ 10:List of 16
  ..$ 1 : logi NA
  ..$ 2 : int [1:5] 1 3 4 5 6
  ..$ 3 : logi NA
  ..$ 4 : logi NA
  ..$ 5 : logi NA
  ..$ 6 : logi NA
  ..$ 7 : int [1:5] 1 3 4 5 6
  ..$ 8 : int [1:5] 1 3 4 5 6
  ..$ 9 : int [1:5] 1 3 4 5 6
  ..$ 11: int [1:5] 1 3 4 5 6
  ..$ 12: int [1:5] 1 3 4 5 6
  ..$ 13: int [1:5] 1 3 4 5 6
  ..$ 14: int [1:5] 1 3 4 5 6
  ..$ 15: int [1:5] 1 3 4 5 6
  ..$ 16: int [1:5] 1 3 4 5 6
  ..$ 17: int [1:5] 1 3 4 5 6
 $ 11:List of 16
  ..$ 1 : logi NA
  ..$ 2 : int [1:4] 1 3 7 10
  ..$ 3 : logi NA
  ..$ 4 : int [1:4] 1 3 7 10
  ..$ 5 : int [1:4] 1 3 7 10
  ..$ 6 : int [1:4] 1 3 7 10
  ..$ 7 : logi NA
  ..$ 8 : int [1:4] 1 3 7 10
  ..$ 9 : int [1:4] 1 3 7 10
  ..$ 10: logi NA
  ..$ 12: int [1:4] 1 3 7 10
  ..$ 13: int [1:4] 1 3 7 10
  ..$ 14: int [1:4] 1 3 7 10
  ..$ 15: int [1:4] 1 3 7 10
  ..$ 16: int [1:4] 1 3 7 10
  ..$ 17: int [1:4] 1 3 7 10
 $ 12:List of 16
  ..$ 1 : logi NA
  ..$ 2 : int [1:2] 1 6
  ..$ 3 : int [1:2] 1 6
  ..$ 4 : int [1:2] 1 6
  ..$ 5 : int [1:2] 1 6
  ..$ 6 : logi NA
  ..$ 7 : int [1:2] 1 6
  ..$ 8 : int [1:2] 1 6
  ..$ 9 : int [1:2] 1 6
  ..$ 10: int [1:2] 1 6
  ..$ 11: int [1:2] 1 6
  ..$ 13: int [1:2] 1 6
  ..$ 14: int [1:2] 1 6
  ..$ 15: int [1:2] 1 6
  ..$ 16: int [1:2] 1 6
  ..$ 17: int [1:2] 1 6
 $ 13:List of 16
  ..$ 1 : logi NA
  ..$ 2 : int 1
  ..$ 3 : int 1
  ..$ 4 : int 1
  ..$ 5 : int 1
  ..$ 6 : int 1
  ..$ 7 : int 1
  ..$ 8 : int 1
  ..$ 9 : int 1
  ..$ 10: int 1
  ..$ 11: int 1
  ..$ 12: int 1
  ..$ 14: int 1
  ..$ 15: int 1
  ..$ 16: int 1
  ..$ 17: int 1
 $ 14:List of 16
  ..$ 1 : int [1:3] 7 11 13
  ..$ 2 : int [1:3] 7 11 13
  ..$ 3 : int [1:3] 7 11 13
  ..$ 4 : int [1:3] 7 11 13
  ..$ 5 : int [1:3] 7 11 13
  ..$ 6 : int [1:3] 7 11 13
  ..$ 7 : logi NA
  ..$ 8 : int [1:3] 7 11 13
  ..$ 9 : int [1:3] 7 11 13
  ..$ 10: int [1:3] 7 11 13
  ..$ 11: logi NA
  ..$ 12: int [1:3] 7 11 13
  ..$ 13: logi NA
  ..$ 15: int [1:3] 7 11 13
  ..$ 16: int [1:3] 7 11 13
  ..$ 17: int [1:3] 7 11 13
 $ 15:List of 16
  ..$ 1 : int [1:2] 5 13
  ..$ 2 : int [1:2] 5 13
  ..$ 3 : int [1:2] 5 13
  ..$ 4 : int [1:2] 5 13
  ..$ 5 : logi NA
  ..$ 6 : int [1:2] 5 13
  ..$ 7 : int [1:2] 5 13
  ..$ 8 : int [1:2] 5 13
  ..$ 9 : int [1:2] 5 13
  ..$ 10: int [1:2] 5 13
  ..$ 11: int [1:2] 5 13
  ..$ 12: int [1:2] 5 13
  ..$ 13: logi NA
  ..$ 14: int [1:2] 5 13
  ..$ 16: int [1:2] 5 13
  ..$ 17: int [1:2] 5 13
 $ 16:List of 16
  ..$ 1 : logi NA
  ..$ 2 : int [1:3] 1 14 15
  ..$ 3 : int [1:3] 1 14 15
  ..$ 4 : int [1:3] 1 14 15
  ..$ 5 : int [1:3] 1 14 15
  ..$ 6 : int [1:3] 1 14 15
  ..$ 7 : int [1:3] 1 14 15
  ..$ 8 : int [1:3] 1 14 15
  ..$ 9 : int [1:3] 1 14 15
  ..$ 10: int [1:3] 1 14 15
  ..$ 11: int [1:3] 1 14 15
  ..$ 12: int [1:3] 1 14 15
  ..$ 13: int [1:3] 1 14 15
  ..$ 14: logi NA
  ..$ 15: logi NA
  ..$ 17: int [1:3] 1 14 15
 $ 17:List of 16
  ..$ 1 : int [1:5] 4 7 10 11 12
  ..$ 2 : int [1:5] 4 7 10 11 12
  ..$ 3 : int [1:5] 4 7 10 11 12
  ..$ 4 : logi NA
  ..$ 5 : int [1:5] 4 7 10 11 12
  ..$ 6 : int [1:5] 4 7 10 11 12
  ..$ 7 : logi NA
  ..$ 8 : int [1:5] 4 7 10 11 12
  ..$ 9 : int [1:5] 4 7 10 11 12
  ..$ 10: logi NA
  ..$ 11: logi NA
  ..$ 12: logi NA
  ..$ 13: int [1:5] 4 7 10 11 12
  ..$ 14: int [1:5] 4 7 10 11 12
  ..$ 15: int [1:5] 4 7 10 11 12
  ..$ 16: int [1:5] 4 7 10 11 12
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  4.982   0.101   5.280 
