
importFrom("robustbase",
	   covOGK, hard.rejection,
	   Qn, s_Qn, scaleTau2 #, Sn, s_Sn, s_mad, s_IQR
	   )

#import(graph)# importFrom(graph, )
importClassesFrom("graph", graph, graphNEL)
importMethodsFrom("graph",
		  ## addEdge,
		  coerce,# as(., ...)
		  edges, edgeData, edgeDataDefaults,
		  nodes,
		  numNodes, numEdges,
		  subGraph, ugraph)

importFrom("RBGL",
	   biConnComp, johnson.all.pairs.sp, separates)
## also    sp.between -- but only for deprecated beta.special(), hence RBGL::*
importMethodsFrom("RBGL",
		  bfs)


# importFrom("MASS", mvrnorm)
importFrom("ggm", isAcyclic,transClos,topOrder)

importFrom("graphics", plot)

## FIXME: do *NOT* export those that are "internal" <--> man/pcalg-internal.Rd
export(randomDAG,
       wgtMatrix,
       rmvDAG,
       pcAlgo,
       pcSelect,
       pcSelect.presel,
       zStat,
       condIndFisherZ,
       pcorOrder,
       compareGraphs,
       getNextSet,
       mcor,
       corGraph,
       make.edge.df,
       orderEdges,
       labelEdges,
       dag2cpdag,
       find.sink,
       adj.check,
       pdag2dag,
       amat2dag,
       udag2pdag,
       shd,
       trueCov,
       ci.test,
       udag2pdagSpecial,
       udag2pdagRelaxed,
       beta.special,
       beta.special.pcObj,
       lm.cov,
       causalEffect,
       check.new.coll,
       allDags,
       pcAlgo.Perfect,
       reach,
       plotAG,
       skeleton,
       pc,
       fci,
       udag2pag,
       qreach,
       pdsep,
       rfci,
       udag2apag,
       rfci.vstructures,
       find.unsh.triple,
       dag2pag,
       gSquareBin,
       gSquareDis,
       gaussCItest,
       dsepTest,
       disCItest,
       binCItest,
       dsep,
       ida,
       idaFast,
       legal.psep,
       plotSG,
       r.gauss.pardag,
       rmvnorm.ivent,
       gies,
       gds,
       caus.inf,
       silander,
       dag2essgraph)

exportClasses("pcAlgo",
              "fciAlgo",
              "gAlgo",
              "pardag",
              "gauss.pardag",
              "int.score",
              "gauss.l0pen.int.score",
              "ess.graph")

exportMethods("summary","show","plot")

useDynLib(pcalg)
