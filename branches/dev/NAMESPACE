useDynLib(pcalg)

###----- Imports ------------------------------------------------------

importFrom("utils", str)# for all the help examples

## try to import all we need, but not more
importFrom("methods",
           setClass, setClassUnion, setMethod, setOldClass, setValidity,
           getClass, getClassDef, callGeneric, as, is, extends,
	   new, validObject,
	   signature, representation, prototype)

importFrom("abind", abind)
importFrom("corpcor", pseudoinverse)

importFrom("robustbase",
	   covOGK, hard.rejection,
	   Qn, s_Qn, scaleTau2 #, Sn, s_Sn, s_mad, s_IQR
	   )

#import(graph)# importFrom(graph, )
importClassesFrom("graph", graph, graphNEL)
importMethodsFrom("graph",
		  ## addEdge,
		  coerce,# as(., ...)
		  edges, edgeData, edgeDataDefaults,
		  nodes,
		  numNodes, numEdges,
		  subGraph, ugraph)

importFrom("igraph", graph.adjacency, igraph.from.graphNEL, is.chordal, plot.igraph)

importFrom("RBGL",
	   biConnComp, johnson.all.pairs.sp, separates, bfs, connectedComp)
## also    sp.between -- but only for deprecated beta.special(), hence RBGL::*

importFrom("ggm", isAcyclic, transClos, topOrder)

importFrom("graphics", plot.default, plot)


###----- Exports ------------------------------------------------------

## NB: do not export those that are "internal" <--> man/pcalg-internal.Rd
export(trueCov,
       randomDAG,
       wgtMatrix,
       rmvDAG,
       pcSelect,
       zStat,
       condIndFisherZ,
       pcorOrder,
       compareGraphs,
       getNextSet,
       mcor,
       pcSelect.presel,
       corGraph,
       dag2cpdag,
       find.sink,
       adj.check,
       amat2dag,
       udag2pdag,
       shd,
       ci.test,
       pcAlgo,
       flipEdges,
       pdag2dag,
       udag2pdagSpecial,
       udag2pdagRelaxed,
       beta.special,
       beta.special.pcObj,
       lm.cov,
       causalEffect,
       check.new.coll,
       allDags,
       pcAlgo.Perfect,
       reach,
       plotAG,
       skeleton,
       pc,
       gSquareBin,
       gSquareDis,
       gaussCItest,
       dsep,
       dsepTest,
       disCItest,
       binCItest,       
       ida,
       idaFast,
       legal.psep,
       plotSG,
       pc.cons.intern,
       checkTriple,
       faith.check,
       triple2numb,
       updateList,
       minUncovPdPath,
       minUncovCircPath,
       find.min.discr.path,
       fci,
       qreach,
       pdsep,
       udag2pag,
       rfci,
       find.unsh.triple,
       rfci.vstructures,
       dep.triple,
       udag2apag,
       ancTS,
       dag2pag,
       skeleton.dag2pag,
       new.ord,
       iplotPC,
       showEdgeList,
       showAmat,
       VisibleEdge,
       possibleDe,
       dreach,
       pag2mag,
       my.SpecialDag,
       backdoor,
       r.gauss.pardag,
       rmvnorm.ivent,
       gies,
       ges,
       gds,
       caus.inf,
       simy,
       dag2essgraph)

exportClasses("pcAlgo",
              "fciAlgo",
              "gAlgo",
              "ParDAG",
              "GaussParDAG",
              "Score",
              "GaussL0penIntScore",
              "GaussL0penObsScore",
              "EssGraph")

exportMethods("summary","show","plot")
